/**
 * This class is generated by jOOQ
 */
package guestbook.database.generated.tables;


import guestbook.database.generated.Guestbook;
import guestbook.database.generated.Keys;
import guestbook.database.generated.tables.records.PostsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Posts extends TableImpl<PostsRecord> {

	private static final long serialVersionUID = -1138953392;

	/**
	 * The reference instance of <code>guestbook.posts</code>
	 */
	public static final Posts POSTS = new Posts();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PostsRecord> getRecordType() {
		return PostsRecord.class;
	}

	/**
	 * The column <code>guestbook.posts.id</code>.
	 */
	public final TableField<PostsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>guestbook.posts.body</code>.
	 */
	public final TableField<PostsRecord, String> BODY = createField("body", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>guestbook.posts.timestamp</code>.
	 */
	public final TableField<PostsRecord, Timestamp> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>guestbook.posts.title</code>.
	 */
	public final TableField<PostsRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * Create a <code>guestbook.posts</code> table reference
	 */
	public Posts() {
		this("posts", null);
	}

	/**
	 * Create an aliased <code>guestbook.posts</code> table reference
	 */
	public Posts(String alias) {
		this(alias, POSTS);
	}

	private Posts(String alias, Table<PostsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Posts(String alias, Table<PostsRecord> aliased, Field<?>[] parameters) {
		super(alias, Guestbook.GUESTBOOK, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PostsRecord> getPrimaryKey() {
		return Keys.KEY_POSTS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PostsRecord>> getKeys() {
		return Arrays.<UniqueKey<PostsRecord>>asList(Keys.KEY_POSTS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Posts as(String alias) {
		return new Posts(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Posts rename(String name) {
		return new Posts(name, null);
	}
}
